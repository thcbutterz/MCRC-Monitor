fs.delete("req/config")
shell.run("pastebin", "get", "rfqYgmrL", "req/config")
print("Downloading Required Files")
sleep(2)

os.loadAPI("req/menuApi")
os.loadAPI("req/config")

config.load("configs","server")
term.clear()
config.writeVal("floors","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("bcol","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("tcol","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("scal","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("spart","bac")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("mpart","txt")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f1","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f2","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f3","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f4","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f5","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f6","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f7","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f8","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f9","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f10","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f11","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f12","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f13","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f14","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f15","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("f16","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m1","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m2","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m3","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m4","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m5","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m6","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m7","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m8","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m9","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m10","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m11","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m12","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m13","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m14","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m15","nil")
config.save()

config.load("configs","server")
term.clear()
config.writeVal("m16","nil")
config.save()

local menu = {
[1] = { text = "I want My Monitor Background to be:", handler = function(tcol) tcol = 1 end},
[2] = { text = "White", handler = function() shell.run("setupParts/BacWhite") end},
[3] = { text = "Orange", handler = function() shell.run("setupParts/BacOrange") end},
[4] = { text = "Magenta", handler = function() shell.run("setupParts/BacMagenta") end},
[5] = { text = "Light Blue", handler = function() shell.run("setupParts/BacLightBlue") end},
[6] = { text = "Yellow", handler = function() shell.run("setupParts/BacYellow") end},
[7] = { text = "Lime", handler = function() shell.run("setupParts/BacLime") end},
[8] = { text = "Pink", handler = function() shell.run("setupParts/BacPink") end},
[9] = { text = "Grey", handler = function() shell.run("setupParts/BacGrey") end},
[10] = { text = "Light Grey", handler = function() shell.run("setupParts/BacLightGrey") end},
[11] = { text = "Cyan", handler = function() shell.run("setupParts/BacCyan") end},
[12] = { text = "Purple", handler = function() shell.run("setupParts/BacPurple") end},
[13] = { text = "Blue", handler = function() shell.run("setupParts/BacBlue") end},
[14] = { text = "Brown", handler = function() shell.run("setupParts/BacBrown") end},
[15] = { text = "Green", handler = function() shell.run("setupParts/BacGreen") end},
[16] = { text = "Red", handler = function() shell.run("setupParts/BacRed") end},
[17] = { text = "Black", handler = function() shell.run("setupParts/BacBlack") end}
}

menuApi.setBarTextColor(32768)
menuApi.setTextColor(1)
menuApi.setBarColor(1)
menuApi.setBackgroundColor(32768)

menuApi.runMenu(menu)
